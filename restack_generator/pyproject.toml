[tool.poetry]
name = "restack-generator"
version = "0.1.0"
description = "Command-line application for generating autonomous AI applications using the Restack framework"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "restack_generator", from = "src"}]
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Code Generators",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]

[tool.poetry.dependencies]
python = "^3.10"
# Core dependencies
click = "^8.1.7"           # CLI framework
typer = "^0.9.0"          # Type-safe CLI builder
rich = "^13.7.0"          # Rich text and formatting in terminal
pydantic = "^2.5.2"       # Data validation

# Code generation and manipulation
libcst = "^1.1.0"         # Concrete syntax tree manipulation
jinja2 = "^3.1.2"         # Template engine
black = "^23.11.0"        # Code formatting
aiofiles = "^23.2.1"      # Async file I/O

# AI and ML integration
anthropic = "^0.8.1"      # Anthropic API client
cerebras-cloud-sdk = "*" # Cerebras SDK
numpy = "^2.2.2"         # Numerical computations
pandas = "^2.1.3"         # Data manipulation
scikit-learn = "^1.3.2"   # ML utilities

# Workflow and runtime
temporalio = "^1.8.0"     # Temporal.io SDK
kubernetes = "^28.1.0"    # Kubernetes API
grpcio = "^1.59.3"        # gRPC support
protobuf = "^4.25.1"      # Protocol buffers

# Storage and caching
redis = "^5.0.1"          # Redis client
pymongo = "^4.6.0"        # MongoDB client
sqlalchemy = "^2.0.23"    # SQL toolkit

# Utilities
pyyaml = "^6.0.1"         # YAML support
python-dotenv = "^1.0.0"  # Environment variable management
tenacity = "^8.2.3"       # Retry logic
structlog = "^23.2.0"     # Structured logging

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
hypothesis = "^6.75.3"     # Property-based testing
faker = "^20.1.0"         # Test data generation

# Code quality
mypy = "^1.7.1"           # Static type checking
ruff = "^0.1.6"           # Fast Python linter
pylint = "^3.0.2"         # Python code analysis
pre-commit = "^3.5.0"     # Git hooks manager
bandit = "^1.7.5"         # Security linter

# Documentation
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.14"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}

# Development tools
ipython = "^8.18.0"       # Enhanced Python REPL
debugpy = "^1.8.0"        # Debug adapter protocol implementation

[tool.poetry.scripts]
restack-generator = "restack_generator.cli.main:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
addopts = "-ra -q --cov=restack_generator"


[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
select = ["E", "F", "B", "I"]
ignore = []
line-length = 88
target-version = "py39"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

